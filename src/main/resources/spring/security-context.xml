<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/security" xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc"

             xsi:schemaLocation="
             http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd
             http://www.springframework.org/schema/mvc
             https://www.springframework.org/schema/mvc/spring-mvc.xsd
             http://www.springframework.org/schema/context
             https://www.springframework.org/schema/context/spring-context.xsd">


    <http pattern="/resources/**" security="none"/>
    <global-method-security secured-annotations="enabled" />

    <context:component-scan base-package="com.example.shop"></context:component-scan>
    <context:annotation-config></context:annotation-config>
    <mvc:annotation-driven/>
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://localhost:3306/shop?useSSL=false&amp;serverTimezone=UTC&amp;allowMultiQueries=true"/>
        <!-- logging -->
        <!--        <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>-->
        <!--        <property name="url" value="jdbc:log4jdbc:mariadb://localhost:3306/shop?useSSL=false&amp;serverTimezone=UTC"/>-->
        <beans:property name="username" value="developer"/>
        <beans:property name="password" value="1234"/>
    </beans:bean>
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="mapperLocations" value="classpath:/database/mappers/*-mapper.xml"/>
        <beans:property name="configLocation" value="classpath:/database/mybatis-config.xml"/>
    </beans:bean>
    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
        <beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </beans:bean>

    <!-- AuthenticationProvider 상속받은 UserAuthenticationProvider를 AuthenticationManager로 등록 -->
    <authentication-manager id="userAuthenticationManager">
        <authentication-provider ref="userAuthenticationProvider">
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="userService" class="com.example.shop.service.UserService"/>
    <beans:bean id="userAuthenticationProvider" class="com.example.shop.config.security.user.UserAuthenticationProvider"/>
    <beans:bean id="userLogoutSuccessHandler" class="com.example.shop.config.security.user.UserLogoutSuccessHandler"/>
    <beans:bean id="userAuthSuccessHandler" class="com.example.shop.config.security.user.UserAuthSuccessHandler"/>
    <beans:bean id="userAuthFailureHandler" class="com.example.shop.config.security.user.UserAuthFailureHandler"/>

    <!-- 관리자 페이지 적용 "SELLER" 권한을 가져야만 들어올 수 있다.-->
    <http pattern="/admin/**"
          auto-config="true"
          use-expressions="true"
          authentication-manager-ref="userAuthenticationManager">
        <csrf disabled="true"/>

        <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_SELLE')"/>

        <form-login
                login-page="/user/login"
                username-parameter="userId"
                password-parameter="password"
                login-processing-url="/user/loginAction"
                authentication-success-handler-ref="userAuthSuccessHandler"
                authentication-failure-handler-ref="userAuthFailureHandler"
        />
        <logout
                logout-url="/logoutAction"
                logout-success-url="/user/login"
                invalidate-session="true"

        />
        <session-management invalid-session-url="/login">
            <concurrency-control max-sessions="1" expired-url="/login"/>
        </session-management>

    </http>

    <!-- 구매자의 구매 기능 "BUYER" 권한을 가져야만 들어올 수 있다. -->
    <http pattern="/**"
          auto-config="true"
          use-expressions="true"
          authentication-manager-ref="userAuthenticationManager">
        <csrf disabled="true"/>

        <intercept-url pattern="/**" access="permitAll"/>
        <intercept-url pattern="/cart/**"  access="hasRole('ROLE_BUYER')"/>
        <intercept-url pattern="/order/**" access="hasRole('ROLE_BUYER')"/>


        <form-login login-page="/user/login"
            username-parameter="userId"
            password-parameter="password"
            login-processing-url="/user/loginAction"
            authentication-success-handler-ref="userAuthSuccessHandler"
                    authentication-failure-url="/user/login"
        />

        <logout
                logout-url="/logoutAction"
                invalidate-session="true"
                logout-success-url="/store?page=1"
        />
        <session-management invalid-session-url="/user/login">
            <concurrency-control max-sessions="1" expired-url="/user/login"/>
        </session-management>

    </http>
</beans:beans>

