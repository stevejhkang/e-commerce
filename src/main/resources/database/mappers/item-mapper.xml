<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shop.ItemMapper">
    <insert id="insert" parameterType="ItemDto">
        insert into shop.items(item_name, price,delivery_option, display_option, stock, manufacturer, description, img_src)
        values (#{itemName}, #{price}, #{deliveryOption}, #{displayOption}, #{stock}, #{manufacturer}, #{description}, #{imgSrc})
    </insert>

    <select id="selectCount" parameterType="PagingSearchAndSort" resultType = "integer">
        select count(*)
        from shop.items
        <where>
            <if test="searchText !=null and searchText != '' ">
                <choose>
                    <when test="'itemName'.equals(searchType)">
                        item_name like concat('%',#{searchText},'%');
                    </when>
                    <when test="'manufacturer'.equals(searchType)">
                        manufacturer like concat('%',#{searchText},'%');
                    </when>
                </choose>
            </if>
        </where>

    </select>

    <select id="selectAll" parameterType="PagingSearchAndSort" resultType="ItemDto">
        select
            R.RNUM
            , R.*
        from
        (
            select
                T.*
                , @ROWNUM := @ROWNUM +1 AS RNUM
            from
                (
                    select *
                    from shop.items
                    <if test="searchText !=null and searchText != ''">
                        <where>
                            <choose>
                                <when test="'itemName'.equals(searchType)">
                                    item_name like concat('%',#{searchText},'%')
                                </when>
                                <when test="'manufacturer'.equals(searchType)">
                                    manufacturer like concat('%',#{searchText},'%')
                                </when>
                            </choose>
                        </where>
                    </if>

                ) T
                , (select @ROWNUM :=0 ) A
            order by
            <choose>
                <when test="orderBy eq 'RegisterDate'">T.item_sn desc</when>
                <when test="orderBy eq 'AlphabetASC'">T.item_name</when>
                <when test="orderBy eq 'AlphabetDESC'">T.item_name desc</when>
                <when test="orderBy eq 'PriceASC'">T.price</when>
                <when test="orderBy eq 'PriceDESC'">T.price desc</when>
                <otherwise>T.item_sn desc</otherwise>
            </choose>
        ) R

        where
            R.RNUM between ${((pageIndex-1) * pageCount) + 1} and ${((pageIndex-1) * pageCount) + pageCount }
    </select>

    <select id="selectAllDisplayedItems" parameterType="PagingSearchAndSort" resultType="ItemDto">
        select
        R.RNUM
        , R.*
        from
        (
        select
        T.*
        , @ROWNUM := @ROWNUM +1 AS RNUM
        from
        (
        select *
        from shop.items
        where
            display_option = 'DISPLAY'
        <if test="searchText !=null and searchText != ''">
           and
                <choose>
                    <when test="'itemName'.equals(searchType)">
                        item_name like concat('%',#{searchText},'%')
                    </when>
                    <when test="'manufacturer'.equals(searchType)">
                        manufacturer like concat('%',#{searchText},'%')
                    </when>
                </choose>
        </if>
        ) T
        , (select @ROWNUM :=0 ) A
        order by
        <choose>
            <when test="orderBy eq 'RegisterDate'">T.item_sn desc</when>
            <when test="orderBy eq 'AlphabetASC'">T.item_name</when>
            <when test="orderBy eq 'AlphabetDESC'">T.item_name desc</when>
            <when test="orderBy eq 'PriceASC'">T.price</when>
            <when test="orderBy eq 'PriceDESC'">T.price desc</when>
            <otherwise>T.item_sn desc</otherwise>
        </choose>
        ) R

        where
        R.RNUM between ${((pageIndex-1) * pageCount) + 1} and ${((pageIndex-1) * pageCount) + pageCount }
    </select>

    <select id="selectItem" parameterType="integer" resultType="ItemDto">
        select
            *
        from
            shop.items
        where
            item_sn = #{itemSn}
    </select>

    <update id="updateItem" parameterType="ItemDto">
        update
            shop.items
        set
            item_name = #{itemName}
            , price = #{price}
            , delivery_option = #{deliveryOption}
            , display_option = #{displayOption}
            , stock = #{stock}
            , manufacturer = #{manufacturer}
            , description = #{description}
            , img_src = #{imgSrc}
        where
            item_sn = #{itemSn}
    </update>

    <update id="updateStocks" parameterType="java.util.List">
       <foreach collection="list" item="ItemDto" open="" close="" separator=";" >
           update
            shop.items
           set
            stock = #{ItemDto.stock}
           where
            item_sn = #{ItemDto.itemSn}
       </foreach>
    </update>

    <delete id="deleteItem" parameterType="integer">
        delete from
            shop.items
        where
            item_sn = #{id}
    </delete>

    <select id="findOrderByOrderSn" parameterType="integer">
        select
            *
        from shop.orders
        where
            order_sn = #{orderSn}
    </select>
</mapper>